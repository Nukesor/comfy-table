name: Tests

on:
  push:
    branches: [main]
    paths:
      - ".github/workflows/test.yml"
      - "**.rs"
      - "Cargo.toml"
      - "Cargo.lock"
  pull_request:
    branches: [main]
    paths:
      - ".github/workflows/test.yml"
      - "**.rs"
      - "Cargo.toml"
      - "Cargo.lock"

jobs:
  test:
    name: Test target ${{ matrix.target }} on ${{ matrix.os }} for ${{ matrix.toolchain }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
          - wasm32-wasi
        toolchain: [stable, nightly, 1.62]
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            minimal_setup: false
          - target: wasm32-wasi
            os: ubuntu-latest
            minimal_setup: true
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            minimal_setup: false
          - target: x86_64-apple-darwin
            os: macos-latest
            minimal_setup: false

    # minimal_setup: This is needed for targets that don't support our dev dependencies.
    #                It also excludes the default features, i.e. [tty].
    #                For instance, "wasm32-wasi" is such a target.
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          targets: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy

      - name: cargo build
        run: cargo build --target=${{ matrix.target }}
        if: ${{ !matrix.minimal_setup }}

      - name: cargo test
        run: cargo test --target=${{ matrix.target }} --features=integration_test
        if: ${{ !matrix.minimal_setup }}

      - name: cargo build without default features and without dev dependencies
        run: cargo build --release --target=${{ matrix.target }} --no-default-features
        if: ${{ matrix.minimal_setup }}
